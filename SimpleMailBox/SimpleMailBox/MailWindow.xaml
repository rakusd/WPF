<Window x:Class="WpfApp1.MailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MailWindow" Height="300" Width="500"
        WindowStartupLocation="CenterOwner" WindowStyle="None" ShowInTaskbar="False"
        ResizeMode="NoResize" Loaded="Window_Loaded"
        >

    <Window.Resources>
        <ResourceDictionary x:Name="LanguageDictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="English.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="BorderThickness" Value="3"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="True">
                                <Border ToolTip="{Binding ElementName=AdornedElement, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Background="Red" Width="20" Height="20" CornerRadius="5" DockPanel.Dock="Right">
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                               Foreground="White" FontSize="12"
                               FontWeight="Bold" >
                        X
                                    </TextBlock>
                                </Border>
                                <Border>
                                    <AdornedElementPlaceholder Name="AdornedElement"/>
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel >
        <Border Height="100" DockPanel.Dock="Top">
            <TextBlock Text="{DynamicResource StrNewMail}" FontSize="25" 
                       Foreground="DarkGreen" VerticalAlignment="Center"
                       Margin="30,0,0,0"/>
        </Border>
        <Grid Height="30" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,10,0" Text="{DynamicResource StrTo}" HorizontalAlignment="Right"/>
            <TextBox  Name="MailTo" Grid.Column="1" Margin="0,0,30,10">
                <TextBox.Text>
                    <Binding Path="To" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:ToValidator
                                EmptyError="Empty"
                                IncorrectError="Incorrect"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        
        <Grid Height="30" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Margin="0,0,10,0" Text="{DynamicResource StrTitle}" HorizontalAlignment="Right"/>
            <TextBox Name="MailTitle" Grid.Column="1" Margin="0,0,30,10">
                <TextBox.Text>
                    <Binding Path="Titled" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:TitleValidator
                                EmptyError="Empty"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>

        <Grid DockPanel.Dock="Bottom" Height="30" >
            <Button Width="60" Height="20" HorizontalAlignment="Right" Margin="0,0,20,0" Click="SendButton_Click" >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=MailTitle,Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MailTo,Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MailBody,Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MailTitle,Path=Text,UpdateSourceTrigger=PropertyChanged}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MailTo,Path=Text,UpdateSourceTrigger=PropertyChanged}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=MailBody,Path=Text,UpdateSourceTrigger=PropertyChanged}" Value="">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <TextBlock Text="{DynamicResource StrSend}"/>
            </Button>
            <Button Width="60" Height="20" HorizontalAlignment="Right" Margin="0,0,100,0" Click="CancelButton_Click" >
                <TextBlock Text="{DynamicResource StrCancel}"/>
            </Button>
        </Grid>

        <Grid  VerticalAlignment="Stretch" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,10,0" Text="{DynamicResource StrMessage}" HorizontalAlignment="Right"/>
            <TextBox Name="MailBody" TextWrapping="Wrap" Grid.Column="1" Margin="0,0,30,10">
                <TextBox.Text>
                    <Binding Path="Body" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:BodyValidator
                                EmptyError="Empty"
                                LengthError="{StaticResource StrTooShort}"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
    </DockPanel>
</Window>
